<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lms.mapper.LmsCommodityReceiptItemMapper" >
  <resultMap id="BaseResultMap" type="lms.model.LmsCommodityReceiptItem" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="COUNT" property="count" jdbcType="DECIMAL" />
    <result column="PRICE" property="price" jdbcType="DECIMAL" />
    <result column="SUBPRICE" property="subprice" jdbcType="DECIMAL" />
    <result column="COMMODITY_RECEIPT_ID" property="commodityReceiptId" jdbcType="DECIMAL" />
    <result column="PRODUCT_ID" property="productId" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, COUNT, PRICE, SUBPRICE, COMMODITY_RECEIPT_ID, PRODUCT_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="lms.model.LmsCommodityReceiptItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from LMS_COMMODITY_RECEIPT_ITEM
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from LMS_COMMODITY_RECEIPT_ITEM
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from LMS_COMMODITY_RECEIPT_ITEM
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="lms.model.LmsCommodityReceiptItemExample" >
    delete from LMS_COMMODITY_RECEIPT_ITEM
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="lms.model.LmsCommodityReceiptItem" >
    insert into LMS_COMMODITY_RECEIPT_ITEM (ID, COUNT, PRICE, 
      SUBPRICE, COMMODITY_RECEIPT_ID, PRODUCT_ID
      )
    values (#{id,jdbcType=DECIMAL}, #{count,jdbcType=DECIMAL}, #{price,jdbcType=DECIMAL}, 
      #{subprice,jdbcType=DECIMAL}, #{commodityReceiptId,jdbcType=DECIMAL}, #{productId,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="lms.model.LmsCommodityReceiptItem" >
    insert into LMS_COMMODITY_RECEIPT_ITEM
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="count != null" >
        COUNT,
      </if>
      <if test="price != null" >
        PRICE,
      </if>
      <if test="subprice != null" >
        SUBPRICE,
      </if>
      <if test="commodityReceiptId != null" >
        COMMODITY_RECEIPT_ID,
      </if>
      <if test="productId != null" >
        PRODUCT_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="count != null" >
        #{count,jdbcType=DECIMAL},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="subprice != null" >
        #{subprice,jdbcType=DECIMAL},
      </if>
      <if test="commodityReceiptId != null" >
        #{commodityReceiptId,jdbcType=DECIMAL},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="lms.model.LmsCommodityReceiptItemExample" resultType="java.lang.Integer" >
    select count(*) from LMS_COMMODITY_RECEIPT_ITEM
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update LMS_COMMODITY_RECEIPT_ITEM
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.count != null" >
        COUNT = #{record.count,jdbcType=DECIMAL},
      </if>
      <if test="record.price != null" >
        PRICE = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.subprice != null" >
        SUBPRICE = #{record.subprice,jdbcType=DECIMAL},
      </if>
      <if test="record.commodityReceiptId != null" >
        COMMODITY_RECEIPT_ID = #{record.commodityReceiptId,jdbcType=DECIMAL},
      </if>
      <if test="record.productId != null" >
        PRODUCT_ID = #{record.productId,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update LMS_COMMODITY_RECEIPT_ITEM
    set ID = #{record.id,jdbcType=DECIMAL},
      COUNT = #{record.count,jdbcType=DECIMAL},
      PRICE = #{record.price,jdbcType=DECIMAL},
      SUBPRICE = #{record.subprice,jdbcType=DECIMAL},
      COMMODITY_RECEIPT_ID = #{record.commodityReceiptId,jdbcType=DECIMAL},
      PRODUCT_ID = #{record.productId,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="lms.model.LmsCommodityReceiptItem" >
    update LMS_COMMODITY_RECEIPT_ITEM
    <set >
      <if test="count != null" >
        COUNT = #{count,jdbcType=DECIMAL},
      </if>
      <if test="price != null" >
        PRICE = #{price,jdbcType=DECIMAL},
      </if>
      <if test="subprice != null" >
        SUBPRICE = #{subprice,jdbcType=DECIMAL},
      </if>
      <if test="commodityReceiptId != null" >
        COMMODITY_RECEIPT_ID = #{commodityReceiptId,jdbcType=DECIMAL},
      </if>
      <if test="productId != null" >
        PRODUCT_ID = #{productId,jdbcType=DECIMAL},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="lms.model.LmsCommodityReceiptItem" >
    update LMS_COMMODITY_RECEIPT_ITEM
    set COUNT = #{count,jdbcType=DECIMAL},
      PRICE = #{price,jdbcType=DECIMAL},
      SUBPRICE = #{subprice,jdbcType=DECIMAL},
      COMMODITY_RECEIPT_ID = #{commodityReceiptId,jdbcType=DECIMAL},
      PRODUCT_ID = #{productId,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=DECIMAL}
  </update>


  <!--对LmsProduct的映射-->
  <resultMap id="productResultMap" type="lms.model.LmsCommodityReceiptItem" extends="BaseResultMap" >
    <collection property="productList" ofType="lms.model.LmsProduct">
      <id column="id" property="id" jdbcType="DECIMAL" />
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="price" property="price" jdbcType="DECIMAL" />
      <result column="unit" property="unit" jdbcType="VARCHAR" />
      <result column="LMS_Second_Category_id" property="lmsSecondCategoryId" jdbcType="DECIMAL" />
      <result column="discount" property="discount" jdbcType="DECIMAL" />
      <result column="cost" property="cost" jdbcType="DECIMAL" />
      <result column="size" property="size" jdbcType="VARCHAR" />
      <result column="LMS_Supplier_id" property="lmsSupplierId" jdbcType="DECIMAL" />
      <result column="quality_period" property="qualityPeriod" jdbcType="VARCHAR" />
      <result column="if_back" property="ifBack" jdbcType="DECIMAL" />
      <result column="if_exchange" property="ifExchange" jdbcType="DECIMAL" />
      <result column="description" property="description" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  <!--查询-->
  <select id="findProductResultMap" resultMap="productResultMap">
    select
    LMS_COMMODITY_RECEIPT_ITEM.*,LMS_PRODUCT.*
    from LMS_COMMODITY_RECEIPT_ITEM,  LMS_PRODUCT
    where LMS_COMMODITY_RECEIPT_ITEM."PRODUCT_ID" = LMS_PRODUCT."id"
  </select>



  <!--对LmcCommodityReceipt的映射-->
  <resultMap id="commodityReceiptMap" type="lms.model.LmsCommodityReceiptItem" extends="BaseResultMap" >
    <collection property="productList" ofType="lms.model.LmcCommodityReceipt">
      <id column="ID" property="id" jdbcType="DECIMAL" />
      <result column="TASK_NUMBER" property="taskNumber" jdbcType="DECIMAL" />
      <result column="CUNTOMER_ID" property="cuntomerId" jdbcType="DECIMAL" />
      <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
      <result column="DATETIME" property="datetime" jdbcType="DATE" />
      <result column="COMMAND" property="command" jdbcType="VARCHAR" />
      <result column="IF_RECEIPT" property="ifReceipt" jdbcType="DECIMAL" />
      <result column="STATION_ID" property="stationId" jdbcType="DECIMAL" />
      <result column="TOTAL_PRICE" property="totalPrice" jdbcType="DECIMAL" />
      <result column="TYPE" property="type" jdbcType="DECIMAL" />
      <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
      <result column="FEEDBACK" property="feedback" jdbcType="VARCHAR" />
      <result column="SIGNATURE" property="signature" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  <!--查询-->
  <select id="findCommodityReceiptMap" resultMap="commodityReceiptMap">
    select
    LMS_COMMODITY_RECEIPT_ITEM.*,LMC_COMMODITY_RECEIPT.*
    from LMS_COMMODITY_RECEIPT_ITEM,  LMC_COMMODITY_RECEIPT
    where LMS_COMMODITY_RECEIPT_ITEM."COMMODITY_RECEIPT_ID" = LMC_COMMODITY_RECEIPT."ID"
  </select>

</mapper>