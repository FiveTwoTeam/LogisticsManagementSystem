<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lms.mapper.LmsOrderMapper" >
  <resultMap id="BaseResultMap" type="lms.model.LmsOrder" >
    <result column="id" property="id" jdbcType="DECIMAL" />
    <result column="total_price" property="totalPrice" jdbcType="DECIMAL" />
    <result column="order_number" property="orderNumber" jdbcType="DECIMAL" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="DECIMAL" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="LMS_Customer_id" property="lmsCustomerId" jdbcType="DECIMAL" />
    <result column="payer" property="payer" jdbcType="VARCHAR" />
    <result column="payer_address" property="payerAddress" jdbcType="VARCHAR" />
    <result column="payer_phone" property="payerPhone" jdbcType="DECIMAL" />
    <result column="payer_post_code" property="payerPostCode" jdbcType="DECIMAL" />
    <result column="datetime" property="datetime" jdbcType="DATE" />
    <result column="LMS_Admin_id" property="lmsAdminId" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, total_price, order_number, description, type, address, LMS_Customer_id, payer, 
    payer_address, payer_phone, payer_post_code, datetime, LMS_Admin_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="lms.model.LmsOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from LMS_ORDER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="lms.model.LmsOrderExample" >
    delete from LMS_ORDER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="lms.model.LmsOrder" >
    insert into LMS_ORDER (id, total_price, order_number, 
      description, type, address, 
      LMS_Customer_id, payer, payer_address, 
      payer_phone, payer_post_code, datetime, 
      LMS_Admin_id)
    values (#{id,jdbcType=DECIMAL}, #{totalPrice,jdbcType=DECIMAL}, #{orderNumber,jdbcType=DECIMAL}, 
      #{description,jdbcType=VARCHAR}, #{type,jdbcType=DECIMAL}, #{address,jdbcType=VARCHAR}, 
      #{lmsCustomerId,jdbcType=DECIMAL}, #{payer,jdbcType=VARCHAR}, #{payerAddress,jdbcType=VARCHAR}, 
      #{payerPhone,jdbcType=DECIMAL}, #{payerPostCode,jdbcType=DECIMAL}, #{datetime,jdbcType=DATE}, 
      #{lmsAdminId,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="lms.model.LmsOrder" >
    insert into LMS_ORDER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="orderNumber != null" >
        order_number,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="lmsCustomerId != null" >
        LMS_Customer_id,
      </if>
      <if test="payer != null" >
        payer,
      </if>
      <if test="payerAddress != null" >
        payer_address,
      </if>
      <if test="payerPhone != null" >
        payer_phone,
      </if>
      <if test="payerPostCode != null" >
        payer_post_code,
      </if>
      <if test="datetime != null" >
        datetime,
      </if>
      <if test="lmsAdminId != null" >
        LMS_Admin_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="orderNumber != null" >
        #{orderNumber,jdbcType=DECIMAL},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=DECIMAL},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="lmsCustomerId != null" >
        #{lmsCustomerId,jdbcType=DECIMAL},
      </if>
      <if test="payer != null" >
        #{payer,jdbcType=VARCHAR},
      </if>
      <if test="payerAddress != null" >
        #{payerAddress,jdbcType=VARCHAR},
      </if>
      <if test="payerPhone != null" >
        #{payerPhone,jdbcType=DECIMAL},
      </if>
      <if test="payerPostCode != null" >
        #{payerPostCode,jdbcType=DECIMAL},
      </if>
      <if test="datetime != null" >
        #{datetime,jdbcType=DATE},
      </if>
      <if test="lmsAdminId != null" >
        #{lmsAdminId,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="lms.model.LmsOrderExample" resultType="java.lang.Integer" >
    select count(*) from LMS_ORDER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update LMS_ORDER
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.totalPrice != null" >
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.orderNumber != null" >
        order_number = #{record.orderNumber,jdbcType=DECIMAL},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=DECIMAL},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.lmsCustomerId != null" >
        LMS_Customer_id = #{record.lmsCustomerId,jdbcType=DECIMAL},
      </if>
      <if test="record.payer != null" >
        payer = #{record.payer,jdbcType=VARCHAR},
      </if>
      <if test="record.payerAddress != null" >
        payer_address = #{record.payerAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.payerPhone != null" >
        payer_phone = #{record.payerPhone,jdbcType=DECIMAL},
      </if>
      <if test="record.payerPostCode != null" >
        payer_post_code = #{record.payerPostCode,jdbcType=DECIMAL},
      </if>
      <if test="record.datetime != null" >
        datetime = #{record.datetime,jdbcType=DATE},
      </if>
      <if test="record.lmsAdminId != null" >
        LMS_Admin_id = #{record.lmsAdminId,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update LMS_ORDER
    set id = #{record.id,jdbcType=DECIMAL},
      total_price = #{record.totalPrice,jdbcType=DECIMAL},
      order_number = #{record.orderNumber,jdbcType=DECIMAL},
      description = #{record.description,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=DECIMAL},
      address = #{record.address,jdbcType=VARCHAR},
      LMS_Customer_id = #{record.lmsCustomerId,jdbcType=DECIMAL},
      payer = #{record.payer,jdbcType=VARCHAR},
      payer_address = #{record.payerAddress,jdbcType=VARCHAR},
      payer_phone = #{record.payerPhone,jdbcType=DECIMAL},
      payer_post_code = #{record.payerPostCode,jdbcType=DECIMAL},
      datetime = #{record.datetime,jdbcType=DATE},
      LMS_Admin_id = #{record.lmsAdminId,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>



  <resultMap id="customerAndAdminResultMap" type="lms.model.LmsOrder" extends="BaseResultMap" >
    <association property="customer" javaType="lms.model.LmsCustomer">
      <id column="ID" property="id" jdbcType="DECIMAL" />
      <result column="NAME" property="name" jdbcType="VARCHAR" />
      <result column="IDENTITY_ID" property="identityId" jdbcType="VARCHAR" />
      <result column="WORK_UNIT" property="workUnit" jdbcType="VARCHAR" />
      <result column="PHONE_EXT" property="phoneExt" jdbcType="VARCHAR" />
      <result column="MOBILE_PHONE" property="mobilePhone" jdbcType="VARCHAR" />
      <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
      <result column="POST_CODE" property="postCode" jdbcType="DECIMAL" />
      <result column="MAIL" property="mail" jdbcType="VARCHAR" />
      <result column="STATUS" property="status" jdbcType="DECIMAL" />
    </association>

    <association property="admin" javaType="lms.model.LmsAdmin">
      <id column="ID" property="id" jdbcType="DECIMAL" />
      <result column="USERNAME" property="username" jdbcType="VARCHAR" />
      <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
      <result column="MAIL" property="mail" jdbcType="VARCHAR" />
      <result column="PHONE" property="phone" jdbcType="DECIMAL" />
      <result column="RIGHT" property="right" jdbcType="DECIMAL" />
    </association>
  </resultMap>

  <!--查找-->
  <select id="findCustomerAndAdminMap" resultMap="customerAndAdminResultMap">
    select
    LMS_ORDER.*,customer.*,Lms_Admin.*
    from LMS_ORDER, Lms_Customer customer, Lms_Admin
    where LMS_ORDER."LMS_Customer_id" = customer.id
    and LMS_ORDER."LMS_Admin_id" = Lms_Admin.id
  </select>
</mapper>