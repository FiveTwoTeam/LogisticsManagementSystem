<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lms.mapper.LmsProductImportItemMapper" >
  <resultMap id="BaseResultMap" type="lms.model.LmsProductImportItem" >
    <id column="id" property="id" jdbcType="DECIMAL" />
    <result column="expect_count" property="expectCount" jdbcType="DECIMAL" />
    <result column="fact_count" property="factCount" jdbcType="DECIMAL" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="LMS_Product_id" property="lmsProductId" jdbcType="DECIMAL" />
    <result column="LMS_Product_Import_id" property="lmsProductImportId" jdbcType="DECIMAL" />
    <result column="LMS_Product_Import_Itemcol" property="lmsProductImportItemcol" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, expect_count, fact_count, description, LMS_Product_id, LMS_Product_Import_id, 
    LMS_Product_Import_Itemcol
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="lms.model.LmsProductImportItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from LMS_PRODUCT_IMPORT_ITEM
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.math.BigDecimal" >
    select 
    <include refid="Base_Column_List" />
    from LMS_PRODUCT_IMPORT_ITEM
    where id = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal" >
    delete from LMS_PRODUCT_IMPORT_ITEM
    where id = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="lms.model.LmsProductImportItemExample" >
    delete from LMS_PRODUCT_IMPORT_ITEM
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="lms.model.LmsProductImportItem" >
    insert into LMS_PRODUCT_IMPORT_ITEM (id, expect_count, fact_count, 
      description, LMS_Product_id, LMS_Product_Import_id, 
      LMS_Product_Import_Itemcol)
    values (#{id,jdbcType=DECIMAL}, #{expectCount,jdbcType=DECIMAL}, #{factCount,jdbcType=DECIMAL}, 
      #{description,jdbcType=VARCHAR}, #{lmsProductId,jdbcType=DECIMAL}, #{lmsProductImportId,jdbcType=DECIMAL}, 
      #{lmsProductImportItemcol,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="lms.model.LmsProductImportItem" >
    insert into LMS_PRODUCT_IMPORT_ITEM
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="expectCount != null" >
        expect_count,
      </if>
      <if test="factCount != null" >
        fact_count,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="lmsProductId != null" >
        LMS_Product_id,
      </if>
      <if test="lmsProductImportId != null" >
        LMS_Product_Import_id,
      </if>
      <if test="lmsProductImportItemcol != null" >
        LMS_Product_Import_Itemcol,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="expectCount != null" >
        #{expectCount,jdbcType=DECIMAL},
      </if>
      <if test="factCount != null" >
        #{factCount,jdbcType=DECIMAL},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="lmsProductId != null" >
        #{lmsProductId,jdbcType=DECIMAL},
      </if>
      <if test="lmsProductImportId != null" >
        #{lmsProductImportId,jdbcType=DECIMAL},
      </if>
      <if test="lmsProductImportItemcol != null" >
        #{lmsProductImportItemcol,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="lms.model.LmsProductImportItemExample" resultType="java.lang.Integer" >
    select count(*) from LMS_PRODUCT_IMPORT_ITEM
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update LMS_PRODUCT_IMPORT_ITEM
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.expectCount != null" >
        expect_count = #{record.expectCount,jdbcType=DECIMAL},
      </if>
      <if test="record.factCount != null" >
        fact_count = #{record.factCount,jdbcType=DECIMAL},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.lmsProductId != null" >
        LMS_Product_id = #{record.lmsProductId,jdbcType=DECIMAL},
      </if>
      <if test="record.lmsProductImportId != null" >
        LMS_Product_Import_id = #{record.lmsProductImportId,jdbcType=DECIMAL},
      </if>
      <if test="record.lmsProductImportItemcol != null" >
        LMS_Product_Import_Itemcol = #{record.lmsProductImportItemcol,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update LMS_PRODUCT_IMPORT_ITEM
    set id = #{record.id,jdbcType=DECIMAL},
      expect_count = #{record.expectCount,jdbcType=DECIMAL},
      fact_count = #{record.factCount,jdbcType=DECIMAL},
      description = #{record.description,jdbcType=VARCHAR},
      LMS_Product_id = #{record.lmsProductId,jdbcType=DECIMAL},
      LMS_Product_Import_id = #{record.lmsProductImportId,jdbcType=DECIMAL},
      LMS_Product_Import_Itemcol = #{record.lmsProductImportItemcol,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="lms.model.LmsProductImportItem" >
    update LMS_PRODUCT_IMPORT_ITEM
    <set >
      <if test="expectCount != null" >
        expect_count = #{expectCount,jdbcType=DECIMAL},
      </if>
      <if test="factCount != null" >
        fact_count = #{factCount,jdbcType=DECIMAL},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="lmsProductId != null" >
        LMS_Product_id = #{lmsProductId,jdbcType=DECIMAL},
      </if>
      <if test="lmsProductImportId != null" >
        LMS_Product_Import_id = #{lmsProductImportId,jdbcType=DECIMAL},
      </if>
      <if test="lmsProductImportItemcol != null" >
        LMS_Product_Import_Itemcol = #{lmsProductImportItemcol,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="lms.model.LmsProductImportItem" >
    update LMS_PRODUCT_IMPORT_ITEM
    set expect_count = #{expectCount,jdbcType=DECIMAL},
      fact_count = #{factCount,jdbcType=DECIMAL},
      description = #{description,jdbcType=VARCHAR},
      LMS_Product_id = #{lmsProductId,jdbcType=DECIMAL},
      LMS_Product_Import_id = #{lmsProductImportId,jdbcType=DECIMAL},
      LMS_Product_Import_Itemcol = #{lmsProductImportItemcol,jdbcType=VARCHAR}
    where id = #{id,jdbcType=DECIMAL}
  </update>

  <!--商品入库单与商品-->
  <resultMap id="productAndProductImportMap" type="lms.model.LmsProductImportItem" extends="BaseResultMap" >
    <association property="lmsProduct" javaType="lms.model.LmsProduct">
      <id column="id" property="id" jdbcType="DECIMAL" />
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="price" property="price" jdbcType="DECIMAL" />
      <result column="unit" property="unit" jdbcType="VARCHAR" />
      <result column="LMS_Second_Category_id" property="lmsSecondCategoryId" jdbcType="DECIMAL" />
      <result column="discount" property="discount" jdbcType="DECIMAL" />
      <result column="cost" property="cost" jdbcType="DECIMAL" />
      <result column="size" property="size" jdbcType="VARCHAR" />
      <result column="LMS_Supplier_id" property="lmsSupplierId" jdbcType="DECIMAL" />
      <result column="quality_period" property="qualityPeriod" jdbcType="VARCHAR" />
      <result column="if_back" property="ifBack" jdbcType="DECIMAL" />
      <result column="if_exchange" property="ifExchange" jdbcType="DECIMAL" />
      <result column="description" property="description" jdbcType="VARCHAR" />
    </association>

    <association property="lmsProductImport" javaType="lms.model.LmsProductImport">
      <id column="id" property="id" jdbcType="DECIMAL" />
      <result column="import_no" property="importNo" jdbcType="DECIMAL" />
      <result column="datetime" property="datetime" jdbcType="DATE" />
      <result column="LMS_Supplier_id" property="lmsSupplierId" jdbcType="DECIMAL" />
    </association>
  </resultMap>

  <!--一对多映射-->
  <select id="findproductAndProductImportMap" resultMap="productAndProductImportMap">
    select
    LMS_PRODUCT_IMPORT_ITEM.*,LMS_PRODUCT.*,LMS_PRODUCT_IMPORT.*
    from LMS_PRODUCT_IMPORT_ITEM, LMS_PRODUCT, LMS_PRODUCT_IMPORT
    where LMS_PRODUCT_IMPORT_ITEM."LMS_Product_id" = LMS_PRODUCT."id"
    and LMS_PRODUCT_IMPORT_ITEM."LMS_Product_Import_id" = LMS_PRODUCT_IMPORT."id"
  </select>
</mapper>